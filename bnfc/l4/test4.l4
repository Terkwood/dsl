// this is auto-generated from README.org. Use C-c C-v C-t to output a fresh version of this file.

RULE showMatches
  MATCHTYPE -- :-(
            UnifyExpr Foo.bar
            ObjAttr foo.bar
            ObjAttr foo
            LstExp [ foo, bar ]
            LstExp [ foo=bar, bar=quux ]
            Exp "^\"\\d{9,10}[[:alpha:]]$\""
            Exp AT LEAST 2 OF Item.previousOwners SATISFY AT LEAST 1 OF [ isKing, isQueen ]
            Exp self.nationality
            Exp ["US", "SG"]
            Exp self.nationality IN ["US", "SG"]
            Exp CASE self.nationality MATCHES ["US", "SG"] -> "poop"
            UnifyElem Foo.bar
            UnifyElem     bar
            UnifyExpr Foo.bar.*
            UnifyExpr Foo.bar.[Poop]
            UnifyExpr Foo.bar.*.toots
            UnifyExpr Foo.bar.[Poop].toots
            ObjMethod Foo
            ObjMethod Foo.bar
            ObjMethod Foo.bar(moo=poo, baz=quux)
            UnifyExpr Foo.bar
            Exp quux
            Exp Quux
            Exp "quux"
            Exp [ "quux" ]
            Exp [ quux ]
            Exp [ Quux ]
            Exp [ quux, pouux ]
            BraceList { foo = bar }
            BraceList { baz = quux }
            BraceList { baz = "quux" }
            BraceList { baz = "quux", baz = "quux" }
            BraceList { foo=bar, baz=quux }
            ObjMethod foo.bar(moo=poo)
            ObjMethod foo
            ObjMethod foo.bar
            Exp 22
            Exp foo.bar
            Exp Foo.bar ISA Foo.bar
            Exp foo.bar
            Exp Foo ISA BAR
            Exp Foo IS Bar
            Exp Foo HAS Poo.Elem
            Exp Foo HAS Poo.Elem ~ [Junction]
	    Exp [ foo, bar ]
	    Exp [ foo & bar ]
	    Exp [ foo | bar ]
	    Exp [ foo , bar | quux ]
	    Exp [ { foo=bar } , { bar=baz } | { quux=q } ]
	    Exp [ { foo=bar, f=b } , { bar=baz } , { quux=q } ]
            Exp $someCurrency.var * 10%
            Exp 10
            Exp 10 + 20
            Exp 10 + 20 * 30
            Exp (10 + 20) * 30
            Exp $10
            Exp $10 * 2
            Exp $10 + $10
            Exp 2 * $10
            Exp $10 + $2
            Exp $someCurrency.var * 10%
            WhenLimb  WHEN Foo IS Bar
            WhenLimb  WHEN Foo.bar == "baz"
            WhereLimb WHERE Foo.bar = "baz"
            WhereLimb WHERE Foo.bar = $10 * 2
            WhereLimb WHERE Foo.bar = $some.currency.var * 2
            WhereLimb WHERE Foo.bar = $some.currency.var * (2 + 1)
            WhereLimb WHERE Foo.bar = $some.currency.var * 90%
            WhereLimb WHERE Foo = $10 * 2
            WhereLimb WHERE Foo = $tendollars * 2
            WhereLimb WHERE Foo.bar = objmethod(foo=bar)
            Exp $10 + $2
            DeonticLimb SHANT sell Item
            BinExp AT LEAST 2 OF Item.previousOwners EACH SATISFIES AT LEAST 1 OF [ isKing, isQueen, isPrince, isPrincess , isDuke, isDuchess, isEarl, isCountess ] DISTINCT,NO-REPEATS
            DefineLimb DEFINE Foo ISA Bar WITH fooness = True
            DefineLimb DEFINE Foo ISA Bar WITH fooness = { honk = True }
            Exp Foo=Bar
            ConstraintComma { Foo=Bar }
            ConstraintComma { Foo=Bar, Baz=Quux }
            ConstraintSemi  { Foo=Bar; Baz=Quux }
            ConstraintComma { moo=poo }
            ConstraintComma { vtime = 2010-01-02 }
            ConstraintComma { address = thing }
            ConstraintComma { address = [ Thing ] }
            ConstraintComma { address = [ Thing ] }
            ConstraintComma { address = [ Thing | asdf ] }
            DefineLimb ENTITY foo ISA Bar WITH fooness = True
                                               species  = "Solanum tuberosum"
                                               isEdible = true
                                               previousOwners = [ alice, bob, charlie, daryl ]
	    Rule RULE mkSpud2
                     ENTITY spud2
                        ISA Item
                       WITH species  = "Solanum tuberosum"
                            isEdible = true
                            previousOwners = [ alice, bob, charlie, daryl ]
	    Rule RULE mkSpud2
                     ENTITY spud1 ISA Nothing
                     ENTITY spud2
                        ISA Item
                       WITH species  = "Solanum tuberosum"
                            isEdible = true
                            previousOwners = [ alice, bob, charlie, daryl ]
